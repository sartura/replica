dnl SPDX-License-Identifier: MIT
dnl
dnl Copyright (c) 2021 Sartura Ltd.
dnl
include(`modules/base.docker')dnl

setdef(`_TDISTRO_', `gentoo')dnl

ifelse(index(_TDISTRO_, `gentoo'),0,`dnl
include(`modules/system.docker')dnl
')dnl

setdef(`__debootstrap_release__', `stable')dnl
setdef(`__debootstrap_url__',     `http://deb.debian.org/debian/')dnl

setdef(`__kernel_remote__', `https://github.com/raspberrypi/linux.git')dnl
setdef(`__kernel_branch__', `rpi-5.10.y')dnl
setdef(`__kernel_config__', `./config/kernel/rpi4_5.10.y_config')dnl

setdef(`__firmware_remote__', `https://github.com/raspberrypi/firmware')dnl
setdef(`__firmware_branch__', `stable')dnl

include(`modules/kernel.docker')dnl

# Install target architecture packages
ifelse(index(_TDISTRO_, `gentoo'),0,`dnl
COPY ./repos/replica /var/db/repos/replica
COPY ./config/portage         ${SYSROOT}/etc/portage
RUN __renv__ __rdistfiles__ __rccache__ \
    set_repository_conf ${SYSROOT} replica 100 && \
    set_portage_profile ${SYSROOT} replica replica/_BTARGET_ && \
    cross-emerge -vt --keep-going=n --deep --with-bdeps=y --newuse --newrepo @world

dnl # Common snippets to clean and configure system
include(`modules/cleanup.docker')dnl
include(`modules/configure.docker')dnl
')dnl

ifelse(index(_TDISTRO_, `debian'),0,`dnl
RUN __renv__ __rdistfiles__ __rccache__ \
    debootstrap \
        --cache-dir=/var/cache/distfiles \
        --include="gpg,dirmngr,debian-keyring,ca-certificates,multistrap" \
        "__debootstrap_release__" /var/tmp/ds/ "__debootstrap_url__" && \
    sed -i "/Install-Recommends=false/ s|$|;\n\$config_str .= \" -o Acquire::AllowInsecureRepositories=yes\"|" \
        /var/tmp/ds/usr/sbin/multistrap

COPY ./repos/debian/rpi4/config/multistrap.conf /var/tmp/ds

RUN __renv__ __rdistfiles__ __rccache__ \
    mv ${SYSROOT}/boot          /var/tmp/boot && \
    mv ${SYSROOT}/lib/modules   /var/tmp/modules && \
    #
    rm -rf ${SYSROOT}/* && \
    chroot /var/tmp/ds multistrap -a ${TPARCH} -d /ms -f /multistrap.conf && \
    mv -f /var/tmp/ds/ms/* ${SYSROOT}/ && \
    #
    mv -f /var/tmp/modules           ${SYSROOT}/lib/  && \
    mv -f /var/tmp/boot/*            ${SYSROOT}/boot/ && \
    git clone --depth=1 --branch "__firmware_branch__" __firmware_remote__ \
        /var/tmp/firmware && rm -rf /var/tmp/firmware/.git && \
    cp -r /var/tmp/firmware/boot/*   ${SYSROOT}/boot/ && \
    #
    cp -f /var/tmp/ds/etc/{passwd,group}     ${SYSROOT}/etc && \
    cp -f ${SYSROOT}/lib/systemd/resolv.conf ${SYSROOT}/etc && \
    LC_ALL=C LANGUAGE=C LANG=C DEBIAN_FRONTEND=noninteractive \
        chroot ${SYSROOT} dpkg --configure --pending --force-configure-any --force-depends && \
    gawk -i inplace "BEGIN{OFS=FS=\":\"}; \$1==\"root\" {\$2=\"$(openssl passwd -6 replica)\"}{print}" ${SYSROOT}/etc/shadow
')dnl

# Copy system policies from the Docker context
COPY ./overlay/rpi4 ${SYSROOT}/

# Packaging utilities
RUN __renv__ __rdistfiles__ __rccache__ \
    env -u SYSROOT -u CTARGET -u CHOST emerge -qv sys-fs/dosfstools
COPY ./targets/_BTARGET_.package /docker-entrypoint.sh
ENTRYPOINT ["/docker-entrypoint.sh"]

# Inject target variable into the environment
ENV BTARGET=_BTARGET_
ENV TDISTRO=_TDISTRO_
