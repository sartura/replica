dnl SPDX-License-Identifier: MIT
dnl
dnl Copyright (c) 2021 Sartura Ltd.
dnl
include(`modules/base.docker')dnl

setdef(`_TDISTRO_', `gentoo')dnl

ifelse(index(_TDISTRO_, `gentoo'),0,`dnl
include(`modules/system.docker')dnl
')dnl

setdef(`__debootstrap_release__', `stable')dnl
setdef(`__debootstrap_url__',     `http://deb.debian.org/debian/')dnl
setdef(`__debootstrap_dinclude__', `gpg,dirmngr,debian-keyring,fancontrol,firmware-brcm80211,')dnl
setdef(`__debootstrap_include__', `')dnl

setdef(`__kernel_remote__', `https://github.com/raspberrypi/linux.git')dnl
setdef(`__kernel_branch__', `rpi-5.10.y')dnl
setdef(`__kernel_config__', `./config/kernel/rpi4_5.10.y_config')dnl

setdef(`__firmware_remote__', `https://github.com/raspberrypi/firmware')dnl
setdef(`__firmware_branch__', `stable')dnl

include(`modules/kernel.docker')dnl

# Install target architecture packages
ifelse(index(_TDISTRO_, `gentoo'),0,`dnl
COPY ./repos/replica /var/db/repos/replica
COPY ./config/portage         ${SYSROOT}/etc/portage
RUN __renv__ __rdistfiles__ __rccache__ \
    set_repository_conf ${SYSROOT} replica 100 && \
    set_portage_profile ${SYSROOT} replica replica/_BTARGET_ && \
    cross-emerge -vt --keep-going=n --deep --with-bdeps=y --newuse --newrepo @world

dnl # Common snippets to clean and configure system
include(`modules/cleanup.docker')dnl
include(`modules/configure.docker')dnl
')dnl

ifelse(index(_TDISTRO_, `debian'),0,`dnl
RUN __renv__ __rdistfiles__ __rccache__ \
    mv ${SYSROOT}/boot          /usr/src/boot && \
    mv ${SYSROOT}/lib/modules   /usr/src/modules && \
    rm -rf                      ${SYSROOT}/* && \
    debootstrap \
        --arch=${TPARCH} \
        --no-merged-usr \
        --cache-dir=/var/cache/distfiles \
        --components="main,contrib,non-free" \
        --include="__debootstrap_dinclude__ __debootstrap_include__"\
ifdef(`__debootstrap_exclude__', `dnl
        --exclude="__debootstrap_exclude__" \
')dnl
        "__debootstrap_release__" ${SYSROOT} "__debootstrap_url__" || ( cat ${SYSROOT}/debootstrap/debootstrap.log; exit 1 )
    
RUN __renv__ __rdistfiles__ __rccache__ \
    git clone --depth=1 --branch "__firmware_branch__" __firmware_remote__ \
        /usr/src/firmware && rm -rf /usr/src/firmware/.git && \
    cp -r /usr/src/firmware/boot/* ${SYSROOT}/boot/ && \
    sed -i "s/root:\*:/root\:\$6\$MIf334fS6fTaKihG\$FAoUg\.iIq0WSq\.zZ\.UZ70HrACKRkv9ZGBucyOsXk8hZpqCbkfdo7x\/UVhq7L5Lzd5HTNINQTCcAXttuqSBe070:/" \
        ${SYSROOT}/etc/shadow && \
    mv -f /usr/src/boot/*         ${SYSROOT}/boot/ && \
    mv -f /usr/src/modules      ${SYSROOT}/lib/ && \
    cp -f ${SYSROOT}/lib/systemd/resolv.conf ${SYSROOT}/etc/ && \
    chroot ${SYSROOT} systemctl preset-all
')dnl

# Copy system policies from the Docker context
COPY ./overlay/rpi4 ${SYSROOT}/

# Packaging utilities
RUN __renv__ __rdistfiles__ __rccache__ \
    env -u SYSROOT -u CTARGET -u CHOST emerge -qv sys-fs/dosfstools
COPY ./targets/_BTARGET_.package /docker-entrypoint.sh
ENTRYPOINT ["/docker-entrypoint.sh"]

# Inject target variable into the environment
ENV BTARGET=_BTARGET_
ENV TDISTRO=_TDISTRO_
